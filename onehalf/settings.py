"""
Django settings for onehalf project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path
from oscar.defaults import *
from django.utils.translation import ugettext_lazy as _
from django.urls import reverse_lazy
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOGIN_REDIRECT_URL = '/accounts/'
APPEND_SLASH = True

# Oscar settings
OSCAR_ALLOW_ANON_CHECKOUT = True
#商店基本資訊
OSCAR_SHOP_NAME = 'onehalf'
OSCAR_SHOP_TAGLINE = 'uniqlo二手衣買賣平台'
OSCAR_DEFAULT_CURRENCY = 'TWD'
PAYPAL_FORCE_CURRENCY = 'TWD'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '*0z@(jtthhjt6%@2hwdz7hfu7$)e))%5!!$8bm8mtoxj=w1h(1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

OSCAR_DASHBOARD_NAVIGATION += [
    {
        'label':_('Seller Manager'),
        'icon':'icon-map-marker',
        'children':[
            {
                'label':_('會員餘額提領管理'),
                'url_name':'seller:seller-list',
                'access_fn':lambda user, url_name, url_args, url_kwargs: user.is_staff,
            },
            {
                'label':_('上架申請管理'),
                'url_name':'seller:seller-application-list',##改url 
                'access_fn':lambda user, url_name, url_args, url_kwargs: user.is_staff,
            },
            {
                'label':_('UQ商品列表'),
                'url_name':'seller:seller-uqitems',##改url 
                'access_fn':lambda user, url_name, url_args, url_kwargs: user.is_staff,
            },
             
        ]
    },
]

# Application definition

INSTALLED_APPS = [
    'mainsite',
    'mainsite.seller.apps.SellerConfig', #dashboard的seller meni item
    # official tutorial core applications
    'mainsite.catalogue.apps.CatalogueConfig',
    'mainsite.order.apps.OrderConfig',
    'mainsite.offer.apps.OfferConfig',
    # official tutorial dashboard applications
    'mainsite.dashboard.apps.DashboardConfig',
    'mainsite.basket.apps.BasketConfig',
    'mainsite.checkout.checkout.apps.CheckoutConfig',
    # 'mainsite.partner.apps.PartnerConfig',

    # 'mainsite.dashboard.orders.apps.OrdersDashboardConfig',
    # 'mainsite.dashboard.reports.apps.ReportsDashboardConfig',


    # non oscar apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # oscar
    'django.contrib.sites',
    'django.contrib.flatpages',
    

    'oscar.config.Shop',
    'oscar.apps.analytics.apps.AnalyticsConfig',
    # 'oscar.apps.checkout.apps.CheckoutConfig',
    
    'oscar.apps.address.apps.AddressConfig',
    'oscar.apps.shipping.apps.ShippingConfig',
    # 'oscar.apps.catalogue.apps.CatalogueConfig',
    'oscar.apps.catalogue.reviews.apps.CatalogueReviewsConfig',
    'oscar.apps.communication.apps.CommunicationConfig',
    'oscar.apps.partner.apps.PartnerConfig',
    # 'oscar.apps.basket.apps.BasketConfig',
    'oscar.apps.payment.apps.PaymentConfig',

    # 'oscar.apps.offer.apps.OfferConfig',
    # 'oscar.apps.order.apps.OrderConfig',
    'oscar.apps.customer.apps.CustomerConfig',
    'oscar.apps.search.apps.SearchConfig',
    'oscar.apps.voucher.apps.VoucherConfig',
    'oscar.apps.wishlists.apps.WishlistsConfig',
    # 'oscar.apps.dashboard.apps.DashboardConfig',
    'oscar.apps.dashboard.reports.apps.ReportsDashboardConfig',
    'oscar.apps.dashboard.users.apps.UsersDashboardConfig',
    'oscar.apps.dashboard.orders.apps.OrdersDashboardConfig',
    'oscar.apps.dashboard.catalogue.apps.CatalogueDashboardConfig',
    'oscar.apps.dashboard.offers.apps.OffersDashboardConfig',
    'oscar.apps.dashboard.partners.apps.PartnersDashboardConfig',
    'oscar.apps.dashboard.pages.apps.PagesDashboardConfig',
    'oscar.apps.dashboard.ranges.apps.RangesDashboardConfig',
    'oscar.apps.dashboard.reviews.apps.ReviewsDashboardConfig',
    'oscar.apps.dashboard.vouchers.apps.VouchersDashboardConfig',
    'oscar.apps.dashboard.communications.apps.CommunicationsDashboardConfig',
    'oscar.apps.dashboard.shipping.apps.ShippingDashboardConfig',

    # 3rd-party apps that oscar depends on
    'widget_tweaks',
    'haystack',
    'treebeard',
    'sorl.thumbnail',   # Default thumbnail backend, can be replaced
    'django_tables2',
    'paypal'
]

SITE_ID = 1


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'whitenoise.storage.CompressedManifestStaticFilesStorage', #whitenose
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'oscar.apps.basket.middleware.BasketMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'onehalf.urls'


def location(x): return os.path.join(
    os.path.dirname(os.path.realpath(__file__)), '..', x)


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'oscar.apps.search.context_processors.search_form',
                'oscar.apps.checkout.context_processors.checkout',
                'oscar.apps.communication.notifications.context_processors.notifications',
                'oscar.core.context_processors.metadata',
            ],
        },
    },
]

WSGI_APPLICATION = 'onehalf.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'NAME': str(BASE_DIR / 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'zh-TW'
# LANGUAGE_CODE = 'en-US'
TIME_ZONE = 'Asia/Taipei'


USE_I18N = True
USE_L10N = True
# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/



AUTHENTICATION_BACKENDS = (
    'oscar.apps.customer.auth_backends.EmailBackend',
    'django.contrib.auth.backends.ModelBackend',
)

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

# SMTP Configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # SMTP伺服器
EMAIL_PORT = 587  # TLS通訊埠號
EMAIL_USE_TLS = True  # 開啟TLS(傳輸層安全性)
EMAIL_HOST_USER = 'myonehalf.service@gmail.com'  # 寄件者電子郵件
EMAIL_HOST_PASSWORD = 'ekcfdkjfqxvgmxec'  # Gmail應用程式的密碼


#HEROKU
ALLOWED_HOSTS = ['127.0.0.1','onehalf-clothing.herokuapp.com','myonehalf.herokuapp.com']
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
OSCAR_HOMEPAGE = reverse_lazy('index')
# STATICFILES_DIR = [ ]

# Taken from PayPal's documentation - these should always work in the sandbox
PAYPAL_SANDBOX_MODE = True
PAYPAL_BRAND_NAME = 'onehalf'
PAYPAL_CALLBACK_HTTPS = False
PAYPAL_API_VERSION = '119'

# These are the standard PayPal sandbox details from the docs - but I don't
# think you can get access to the merchant dashboard.
PAYPAL_API_USERNAME = 'myonehalf.service_api1.gmail.com'
PAYPAL_API_PASSWORD = 'QC5V7NYDBC7QRSSB'
PAYPAL_API_SIGNATURE = 'A8HEX.S1JyaD7ngTztrMA8t5JqDNAsmcAzX8sq2KGJPWpWKp2dGi0Ab9'

# Standard currency is TWD
PAYPAL_CURRENCY = PAYPAL_PAYFLOW_CURRENCY = 'TWD'
PAYPAL_PAYFLOW_DASHBOARD_FORMS = True

try:
    from integration import *  # noqa
except ImportError:
    pass